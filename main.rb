#!/usr/bin/ruby

=begin

本算法采用《易传》中记载的“大衍筮法”
占筮的工具是蓍草 , 每一根蓍草又称策。 
《周易》揲蓍占卦的方法称为“大衍筮法”，记载在《周易·系辞上》第九章。 其原文为:“大衍之数五十，其用四十有九。分而为二，以象两。挂一，以象三。揲之以四，以象四时。归奇于扐，以象闰。五岁再闰，故再扐而后挂。”

本算法涵盖理朱熹、陆九渊对于大衍筮法的不同解释, 在《评朱、陆两人对大衍筮法解释的歧异》（作者：朱高正，哲学博士，台湾欧洲文教基金会董事长）一文中明确指出朱熹的解释是错误的，应该按照陆九渊的解释，两者的根本区别，可参见本文。

注：卢泰（世界著名易学导师）在他的著作《理数不二学周易》一书中表示“长期以来人们多依大衍筮法去研究周易的数，或想解开一些却一阙疑问题，但是都无功而返，其原因就是因为它根本不是《周易》的本源筮法只故（P127）”，在这本书中，卢泰认为“参伍筮法”才是最正宗的周易筮法

=end

class Gua
  
  def initialize
    @gua = Array.new(6)
    @yinyang1 = Array.new(6)
    @yinyang2 = Array.new(6)
  end

  def bian (count)

    # 分成天地两组
    puts ("第1步,分为天地两组:")
    tian_zu = rand(2..(count-2))
    di_zu = count - tian_zu
    puts ("天: #{tian_zu}")
    puts ("地: #{di_zu}")

    puts ("第2步,从天地两组中任意一组中拿掉一个数字:")
    if rand(2) > 0
      puts "从天组中去掉1"
      tian_zu = tian_zu - 1
    else
      puts "从地组中去掉1"
      di_zu = di_zu - 1
    end
    puts ("天: #{tian_zu}")
    puts ("地: #{di_zu}")
    
    puts ("第3步,天组除以4得到余数:")
    tian_yushu = tian_zu % 4
    tian_yushu = 4 if tian_yushu == 0
    puts ("天,余数: #{tian_yushu}")

    puts ("第4步,地组除以4得到余数:")
    di_yushu = di_zu % 4
    di_yushu = 4 if di_yushu == 0  #揲四以后，左余一，右 必余三; 左余二，右必余二; 左余三，右必余一; 左余四，右也必余四
    puts ("地,余数: #{di_yushu}")

    return tian_yushu + di_yushu + 1
    # return tian_yushu + di_yushu     #陆九渊认为开始抽出的1，不应该剔除掉，这样就能保证下一变中，总数仍为奇数，从而保证了出现的概率


  end

  def yao
    count = 50 - 1     # 减去的“一”就是太极的本体，剩下的49策则象征太极的施用
    # 三变为一爻
    (1..3).each do |n|
      puts ("-------------变:#{n}, 总数:#{count}--------------")
      count = count - bian(count)
    end
    return count / 4
  end

  def suan
    # 十有八变而成卦
    (0..5).each do |n|
      @gua[n] = yao
    end
    @gua
  end

  def print
    puts ""
    puts '++++++++++++++++++++++++++'
    puts '--++++++++++++++++++++++--'
    puts '----++++++++++++++++++----'
    puts '------+++++++++++++++-----'
    puts '--------+++++++++++-------'
    puts '----------+++++++---------'
    puts '------------+++-----------'
    puts '-------------+------------'
    puts ""
    puts '------------本卦----------'
    (0..5).each do |n|
      @yinyang1[5-n] = @gua[5-n]%2==0 ? '阴':'阳'
      case @gua[5-n]
      when 6
        @yinyang2[5-n] = '老阴'
      when 7
        @yinyang2[5-n] = '少阳'
      when 8
        @yinyang2[5-n] = '少阴'
      when 9
        @yinyang2[5-n] = '老阳'
      end

      if (@yinyang1[5-n] == '阴')
        puts "第#{6-n}爻  #{@gua[5-n]}  #{@yinyang1[5-n]} #{@yinyang2[5-n]}   ---- ----"
      else
        puts "第#{6-n}爻  #{@gua[5-n]}  #{@yinyang1[5-n]} #{@yinyang2[5-n]}   ---------"
      end
    end
    puts ""
    puts '------------变卦----------'
    (0..5).each do |n|
      if @yinyang2[5-n].eql? '老阴'
        @yinyang1[5-n] = '阳'
      end
      if @yinyang2[5-n].eql? '老阳'
        @yinyang1[5-n] = '阴'
      end
      if (@yinyang1[5-n].eql? '阴')
        puts "第#{6-n}爻  #{@gua[5-n]}  #{@yinyang1[5-n]} #{@yinyang2[5-n]}   ---- ----"
      else
        puts "第#{6-n}爻  #{@gua[5-n]}  #{@yinyang1[5-n]} #{@yinyang2[5-n]}   ---------"
      end
    end

    puts ""
    puts "--------------------------------------------------------------"
    puts ""

    puts "朱熹在《易学启蒙》里面列举了出现变爻的七种情况，即根据本卦中出现的变爻数来解卦:"
    puts "1. 没有变爻，就以本卦卦辞断;"
    puts "2. 一爻变，以本卦变爻爻辞断;"
    puts "3. 两爻变，以本卦两个爻辞断，但以上者为主;"
    puts "4. 三爻变，以本卦与变卦卦辞断;本卦为贞(体)，变卦为悔(用);"
    puts "5. 四爻变，以变卦之两不变爻爻辞断，但以下者为主;"
    puts "6. 五爻变，以变卦之不变爻爻辞断;"
    puts "7. 六爻变，以变卦之卦辞断，乾坤两卦则以“用”辞断。即出现一个变爻，以本卦变爻的爻辞来断凶吉;两个变爻，用本卦里两个变爻的爻辞断，并以靠上的变爻爻辞为主;三个变爻，用本卦和变卦的卦辞判，并以本卦卦辞为主;四个变爻，用变卦里两个不变爻的爻辞断;五个变爻，用变卦里不变爻的爻辞来断;六个变爻比较特殊:如果变卦是乾卦，参 照“用九”的爻辞来断，如果变卦是坤卦，参照“用六”的爻辞来断，如果变卦非乾卦或坤卦，就用变卦的卦辞来断。"
    puts ""
    puts "根据朱熹解卦的方法，可以得出哪一爻的爻辞是本次算卦的结果，但是还需要引入【得位】和【得中】的概念"
    puts "【得位】：第一、三、五爻为阳位，第二、四、六爻为阴位，如果决定你命运的那一爻的属性（阴、阳）和【得位】概念中要求的一样，将这种情况叫做【得位】"
    puts "【得中】：把一个六爻卦分解为两个三爻卦，每个三爻卦中间那根爻的位置叫做【中位】，如果决定你命运的那一爻恰恰处在一个【中位】的位置上，将这种情况叫做【得中】"
    puts "--------------------------------------------------------------"
  end
end



gua = Gua.new
gua.suan
gua.print
